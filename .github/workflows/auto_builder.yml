name: 🚀 AI Tools Factory - Daily Auto-Builder

on:
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC
  workflow_dispatch:     # Manual trigger
    inputs:
      debug_mode:
        description: 'Run in debug mode?'
        required: false
        default: false
        type: boolean

env:
  PYTHON_VERSION: '3.11'
  TOOLS_DIR: 'tools'

jobs:
  build-tools:
    name: 🛠 Build & Deploy AI Tools
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      # 1. Cancel previous runs to avoid overlap
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        if: ${{ github.event_name != 'workflow_dispatch' }}
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      # 2. Checkout full repo
      - name: 📦 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      # 3. Setup Python
      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      # 4. Install dependencies
      - name: 📦 Install Requirements
        run: |
          python -m pip install --upgrade pip
          pip install openai PyGithub beautifulsoup4 python-dotenv

      # 5. Run your main tool builder script
      - name: 🚀 Run AI Tool Factory
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GH_TOKEN_SYSTEM: ${{ secrets.GH_TOKEN_SYSTEM }}
          REPO_NAME_SYSTEM: ${{ secrets.REPO_NAME_SYSTEM }}
          DEBUG_MODE: ${{ github.event.inputs.debug_mode }}
        run: |
          set -euo pipefail
          echo "🛠 Running tool generation script..."
          python main.py
          echo "✅ Tool generation complete"

      # 6. Update Index Page (optional)
      - name: 🧩 Update Index Page
        run: |
          python update_index.py || echo "No index update script found. Skipping."

  # Optional: Post-summary
  report:
    name: 📊 Summary Report
    needs: build-tools
    runs-on: ubuntu-latest
    if: ${{ always() }}

    steps:
      - name: 📅 Generate Summary Report
        run: |
          echo "Date: $(date)" > summary.md
          echo "Status: ${{ needs.build-tools.result }}" >> summary.md
          echo "Repo: https://github.com/${{ github.repository }}/tree/${{ env.TOOLS_DIR }}" >> summary.md

      - name: 📤 Upload Summary
        uses: actions/upload-artifact@v3
        with:
          name: daily-summary
          path: summary.md